

CC = g++
LD = g++
CFLAGS = -Wall -std=c++11 -Wno-sign-compare -Wno-unused-variable -Wl,--stack,16000000

ifdef DATA_DIR
	CFLAGS += -DDATA_DIR=\"$(DATA_DIR)\"
endif

ifdef DEBUG
GFLAG += -g
endif

ifdef NO_OMIT_FP
GFLAG += -fno-inline -fno-omit-frame-pointer
endif

ifdef PROF
GFLAG += -pg
endif

ifdef RELEASE
GFLAG += -DRELEASE
endif

ifdef AMD64
GFLAG += -DAMD64
endif

ifdef OPT
GFLAG += -O2
endif


ifndef OPTFLAGS
	OPTFLAGS = -Winvalid-pch -DWINDOWS $(GFLAG)
endif

OBJDIR = obj
NAME = keeper

ROOT = ./
TOROOT = ./../
IPATH = -I. -I./extern

CFLAGS += $(IPATH)

SRCS = $(shell ls -t *.cpp)

ifdef AMD64
LIBS = -lmingw32 -lSDL2main -lSDL2 -mwindows -lvorbisfile -lvorbis -logg -lSDL2_image -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lole32 -ldinput -lddraw -ldxguid -lwinmm -ldsound -lpsapi -lgdiplus -lshlwapi -luuid -lfreetype -lfreeglut -lglu32 -lz -lboost_serialization-mgw49-mt-1_57 -lboost_program_options-mgw49-mt-1_57 -lboost_system-mgw49-mt-1_57 -lboost_filesystem-mgw49-mt-1_57 -lglew32 -ljpeg -lOpenAL32.dll -lsndfile -lopengl32 -lcurldll -limagehlp
else
LIBS = -lSDL2.dll -lSDL2main -lvorbisfile -lvorbis -logg -lSDL2_image -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lole32 -ldinput -lddraw -ldxguid -lwinmm -ldsound -lpsapi -lgdiplus -lshlwapi -luuid -lfreetype -lglut -lglu32 -lz -lboost_serialization-mgw49-mt-1_56 -lboost_program_options-mgw49-mt-1_56 -lboost_system-mgw49-mt-1_56 -lboost_filesystem-mgw49-mt-1_56 -lglew -ljpeg -lOpenAL32.dll -lsndfile -lopengl32 -lcurldll -limagehlp
endif

ifdef debug
	CFLAGS += -g
	OBJDIR := ${addsuffix -d,$(OBJDIR)}
	NAME := ${addsuffix -d,$(NAME)}
else
	CFLAGS += $(OPTFLAGS)
endif


OBJS = $(addprefix $(OBJDIR)/,$(SRCS:.cpp=.o))
DEPS = $(addprefix $(OBJDIR)/,$(SRCS:.cpp=.d))

##############################################################################

all: gen_version $(NAME)

stdafx.h.gch: stdafx.h $(wildcard *.h)
	$(CC) -MMD $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: %.cpp
	$(CC) -MMD $(CFLAGS) -c $< -o $@

$(NAME): $(OBJS) $(OBJDIR)/main.o
	$(LD) $(CFLAGS) -o $@ $^ $(LIBS)

test: $(OBJS) $(OBJDIR)/test.o
	$(LD) $(CFLAGS) -o $@ $^ $(LIBS)

gen_version:
	bash ./gen_version.sh

clean:
	$(RM) $(OBJDIR)/*.o
	$(RM) $(OBJDIR)/*.d
	$(RM) $(NAME)
	$(RM) stdafx.h.gch

-include $(DEPS)
